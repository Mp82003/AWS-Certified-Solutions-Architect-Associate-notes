# AWS Key Management Service (KMS) - Study Notes

## Overview
AWS KMS is a **fully managed service** that provides secure and scalable cryptographic key management and encryption across AWS services and applications.

### Key Benefits
- **Centralized key management** - Control over key generation, storage, and usage
- **Regulatory compliance** - Helps meet GDPR, HIPAA requirements
- **Seamless integration** - Works with various AWS services
- **Data protection** - Encrypts data at rest and in transit
- **Key rotation** - Automatic or manual key rotation capabilities
- **Lifecycle management** - Key retirement and deletion

---

## Key Features & Components

### 1. Key Types Supported
- **Symmetric keys** - Same key for encryption/decryption
- **Asymmetric keys** - Public/private key pairs

### 2. Key Hierarchy
```
AWS Account
└── Key Rings (logical containers)
    └── Individual Keys
```

### 3. Key Identifiers
- **Globally unique** identifiers for each key
- Used to reference keys in KMS operations
- Required for encryption/decryption operations
- Enable integration with other AWS services

### 4. Key Policies
- Define **permissions and access controls** for KMS keys
- Written in **AWS IAM policy language**
- Determine:
  - Who can use the keys
  - What operations can be performed
  - Under what conditions
- Can be attached to individual keys or key rings
- Provide **granular control** over key usage

### 5. Auditing & Logging
- Logs all key usage activities:
  - Key creation
  - Key deletion
  - Key usage events
- **CloudTrail integration** for centralized monitoring
- Enables compliance and audit trails

### 6. Advanced Security Features
- **AWS CloudHSM integration** - Dedicated hardware security modules
- **Multi-region replication** - Key availability across regions
- Enhanced key protection for stringent compliance

---

## Encryption Concepts

### Types of Encryption

#### 1. Symmetric Key Encryption (Secret Key)
- **Single key** for both encryption and decryption
- **Faster** than asymmetric encryption
- Common algorithms: **AES, DES**
- Key material: sequence of random bits
- Operating modes:
  - **Block cipher** - encrypts fixed-size blocks
  - **Stream cipher** - encrypts bit by bit

#### 2. Asymmetric Key Encryption (Public Key)
- **Key pair**: public key (encryption) + private key (decryption)
- Public key freely distributed, private key kept secret
- Common algorithms: **RSA, ECC (Elliptic Curve Cryptography)**
- **Computationally expensive** - used for small data amounts
- Often used for secure key exchange

#### 3. Hybrid Encryption
- **Combines** symmetric and asymmetric encryption
- Process:
  1. Data encrypted with random symmetric key
  2. Symmetric key encrypted with recipient's public key
  3. Both sent together
  4. Recipient decrypts symmetric key with private key
  5. Uses symmetric key to decrypt data
- **Best of both worlds** - efficiency + secure key exchange

---

## KMS Encryption/Decryption Process

### Encryption Flow
1. **Client request** → KMS with plaintext data and CMK specification
2. **KMS validates** client permissions for specified CMK
3. **KMS generates** Data Encryption Key (DEK) - symmetric key
4. **Data encrypted** using DEK → produces ciphertext
5. **Ciphertext returned** to client for storage/transmission

### Decryption Flow
1. **Client request** → KMS with ciphertext and CMK specification
2. **KMS validates** client permissions for specified CMK
3. **KMS decrypts** ciphertext using specified CMK
4. **Plaintext data returned** to client

---

## Key Terms & Acronyms

| Term | Full Form | Description |
|------|-----------|-------------|
| KMS | Key Management Service | AWS's managed encryption service |
| CMK | Customer Master Key | Primary key used in KMS |
| DEK | Data Encryption Key | Symmetric key for actual data encryption |
| HSM | Hardware Security Module | Dedicated crypto hardware |
| AES | Advanced Encryption Standard | Symmetric encryption algorithm |
| RSA | Rivest-Shamir-Adleman | Asymmetric encryption algorithm |
| ECC | Elliptic Curve Cryptography | Asymmetric encryption method |

---

## Exam Tips

### Remember for SAA-C03:
1. **KMS is fully managed** - no infrastructure to manage
2. **Integrates seamlessly** with other AWS services
3. **Key policies** provide granular access control
4. **CloudTrail integration** for auditing
5. **Multi-region replication** for high availability
6. **Hybrid encryption** combines efficiency with security
7. **CMK + DEK pattern** - understand the two-tier key structure
8. **Compliance ready** - helps meet regulatory requirements

### Common Use Cases:
- Encrypting EBS volumes
- S3 bucket encryption
- RDS encryption
- Lambda environment variables
- Secrets Manager integration
- Application-level encryption

# AWS KMS Study Notes - Solutions Architect Exam

## Overview
AWS Key Management Service (AWS KMS) is a managed service that makes it easy to create and control the cryptographic keys used to encrypt your data.

## Cryptographic Operations Supported

### 1. Symmetric Encryption/Decryption
- Uses the same key for both encryption and decryption
- Simpler to manage than asymmetric encryption
- More efficient for bulk data encryption

### 2. Asymmetric Encryption/Decryption
- Uses two keys: public key and private key
- Public key encrypts data, only private key can decrypt
- More secure but more complex to manage
- Used for key exchange and digital signatures

### 3. Digital Signatures
- **Signing**: Uses private key to sign messages/documents
- **Verifying**: Uses public key to verify signature authenticity
- Ensures data integrity and non-repudiation

### 4. HMAC (Hash-based Message Authentication Code)
- Generates and verifies HMAC codes
- Uses secret key + message to create authentication code
- Verifies message authenticity and integrity

### 5. Random Number Generation
- Generates cryptographically secure random numbers
- Used for session keys and nonces
- Essential for cryptographic security

## Key Types in AWS KMS

### AWS Managed Keys
- **Also known as**: AWS Service Keys
- **Managed by**: AWS KMS automatically
- **Used for**: Encrypting data in AWS services (S3, EBS, RDS)
- **Key rotation**: Handled automatically by AWS
- **Control**: Limited - AWS manages operational aspects
- **Cost**: No additional charge for the key itself

### Customer Managed Keys (CMKs)
- **Also known as**: Customer Master Keys
- **Managed by**: Customer within AWS KMS
- **Control**: Full control over key lifecycle
- **Features**: Key rotation, auditing, access control
- **Usage**: AWS services and custom applications

#### Types of Customer Managed Keys:
1. **Symmetric CMKs**
   - Same key for encryption and decryption
   - Most common type
   - Used for bulk data encryption

2. **Asymmetric CMKs**
   - Key pair (public/private keys)
   - Used for encryption/decryption with different keys
   - Used for digital signatures

## Access Control

### KMS Key Policies
- **Purpose**: Control access to specific KMS keys
- **Scope**: Key-level permissions
- **Actions**: encrypt, decrypt, create grant, describe key
- **Applied to**: The CMK directly
- **Example permissions**:
  - All access on all KMS keys
  - Delete key access for specific resources

### IAM Policies
- **Purpose**: Broader AWS resource access control
- **Scope**: User, group, and role permissions
- **Applied to**: IAM identities (users, groups, roles)
- **Not tied to**: Specific KMS keys
- **Example**: S3 bucket object access permissions

### Key Differences:
| Aspect | KMS Key Policies | IAM Policies |
|--------|------------------|--------------|
| Scope | Key-specific | Account-wide |
| Applied to | CMK directly | IAM identities |
| Focus | Key operations | Resource access |
| Management | Key-level | Identity-level |

## Pricing Structure

### Key Storage Costs
- **Customer Managed Keys**: $1 per month (prorated hourly)
- **Same cost for**: Symmetric, asymmetric, HMAC, multi-region keys
- **Includes**: Imported key material, CloudHSM, external key store (XKS)
- **AWS Managed Keys**: No additional charge

### API Request Pricing
- **Charged per**: Number of API requests
- **Operations**: Encrypt, decrypt, sign, verify, generate data key
- **Depends on**: Operation type and key management type
- **Additional costs**: May apply for other AWS service integration

### Free Tier
- **Monthly allowance**: 20,000 requests per month
- **Scope**: Across all regions
- **Included operations**:
  - GenerateDataKey
  - GenerateDataKeyWithoutPlaintext
  - Sign, verify, encrypt, decrypt (for symmetric keys)
  - GetPublicKey
- **Excluded**: Asymmetric key operations

## Pricing Example (S3 Integration)
**Scenario**: 1 KMS key encrypting 10,000 files, 2M decryptions/month

**Cost Breakdown**:
- KMS Key: $1.00/month
- API Requests: 2,010,000 total requests
- Free tier: -20,000 requests
- Billable: 1,990,000 requests × $0.03/10,000 = $5.97
- **Total**: ~$6.97/month

## Key Features

### Additional KMS Features
- **Key Rotation**: Automatic or manual key rotation
- **Key Auditing**: CloudTrail integration for key usage logging
- **Key Policies**: Granular access control
- **Multi-region Keys**: Keys that work across AWS regions
- **Custom Key Stores**: CloudHSM and external key store integration

### Integration Benefits
- **Seamless integration** with AWS services
- **Centralized key management**
- **Compliance and auditing** capabilities
- **Scalable and highly available**

## Exam Tips

1. **Remember the key types**: AWS managed vs Customer managed
2. **Understand pricing model**: Key storage + API requests
3. **Know the free tier limits**: 20,000 requests/month
4. **Policy differences**: KMS key policies vs IAM policies
5. **Cryptographic operations**: Symmetric vs asymmetric use cases
6. **Integration scenarios**: How KMS works with S3, EBS, RDS
7. **Security features**: Digital signatures, HMAC, random number generation
